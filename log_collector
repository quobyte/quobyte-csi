#!/bin/bash

csi_pods=()
while IFS= read -r line; do
    csi_pods+=( "$line" )
done < <(kubectl -n kube-system get po -owide | grep ^quobyte-csi | cut -f 1 -d' ')

if [[ ${#csi_pods[@]} == 0 ]]; then
  echo 'Quobyte CSI pods are not found under kube-system namespace.'
  echo 'Please ensure Quobyte CSI is deployed in kube-system namespace'
  echo ' or change the namespace in script.'
  exit 1
fi

if [ -d csi_logs ]; then
  rm -rf csi_logs
fi

mkdir -p ./csi_logs
echo '###CSIDriver object status###'
kubectl get CSIDriver | grep ^csi.quobyte.com >> ./csi_logs/csi_pods.txt
echo ''
echo '###Quobyte CSI pods status###'
kubectl -n kube-system get po -owide | grep ^quobyte-csi >> ./csi_logs/csi_pods.txt

for el in "${csi_pods[@]}"
do
  mkdir -p "./csi_logs/$el"
  if [[ $el =~ quobyte-csi-controller.* ]]; then
    kubectl -n kube-system logs "$el" -c csi-provisioner >> ./csi_logs/"$el"/csi-provisioner.log
    kubectl -n kube-system logs "$el" -c csi-attacher >> ./csi_logs/"$el"/csi-attacher.log
    kubectl -n kube-system logs "$el" -c csi-cluster-driver-registrar >> ./csi_logs/"$el"/csi-cluster-driver-registrar.log
    #kubectl cp does not support wildcard copy at the moment.
    # use :/tmp/quobyte-csi* once it is supported.
    kubectl cp kube-system/"$el":/tmp/ ./csi_logs/"$el"/ -c quobyte-csi-plugin
  elif [[ $el =~ quobyte-csi-node.* ]];then
    kubectl -n kube-system logs "$el" -c csi-node-driver-registrar >> ./csi_logs/"$el"/csi-node-driver-registrar.log
    #kubectl cp does not support wildcard copy at the moment.
    # use :/tmp/quobyte-csi* once it is supported.
    kubectl cp kube-system/"$el":/tmp/ ./csi_logs/"$el"/ -c quobyte-csi-plugin
 fi
done

if [[ -f quobyte_csi_logs.tar.gz ]]; then
 rm quobyte_csi_logs.tar.gz
fi

tar -zcf quobyte_csi_logs.tar.gz ./csi_logs

