apiVersion: v1
kind: Secret
metadata:
  name: quobyte-admin-secret
  namespace: quobyte
type: "kubernetes.io/quobyte"
data:
  # IMPORTANT: All the values should be base64 encoded.
  # IMPORTANT: All the keys are case sensitive and should be used AS IS.
  # echo -n "value" | base64 gives the base64 encoded data for 'value'
  
  # Base64 encoded Quobyte API user name. Key must be 'user'.
  # Update data (YWRtaW4=) with base64 encoded API user name for your Quobyte deployment.
  user: YWRtaW4=
  # Base64 encoded Quobyte API password. Key must be 'password'.
  # Update data (cXVvYnl0ZQ==) with base64 encoded API password for your Quobyte deployment.
  password: cXVvYnl0ZQ==
  # The user and password information is used to commuicate with Quobyte deployment thorugh API.
  # Your API credentials must have volume create and delete capabilities to use dynamic provisioning.
  
  # Quobyte access keys are used for securely mounting volume.
  # To used access keys with CSI, following requirements should be met
  # 1. Requires Quobyte version 3.0 or later
  # 2. Driver must be deployed with "enableAccessKeys: true" (../quobyte-csi-driver/values.yaml) 
  # 3. Storage class must be provided with this secret as mount secret
  # 4. To enable access keys on native client, add "enable-access-contexts"
  #    in /etc/quobyte/client-service.cfg. For container based client configuration,
  #    see client.yaml definition.
  # (csi.storage.k8s.io/node-publish-secret-name). See example/StorageClass.yaml for sample configuration.
  # accessKeyId: "MFdIZnB4V1pSZGRVTWVhdHh5SFg="
  # accessKeySecret: "Umhjd1NIWEhKZTRCUE14UFlmRkVBSmVhUnBobVpjQ0NONDZqOHJiQg=="
